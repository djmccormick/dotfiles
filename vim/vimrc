set nocompatible

" Plugins
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
Plug 'airblade/vim-gitgutter'
Plug 'bryanmylee/vim-colorscheme-icons'
Plug 'chengzeyi/fzf-preview.vim'
Plug 'dhruvasagar/vim-table-mode'
Plug 'elixir-editors/vim-elixir'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && yarn install'  }
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'kyazdani42/nvim-tree.lua'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'nanotech/jellybeans.vim'
Plug 'pangloss/vim-javascript'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'slashmili/alchemist.vim'
Plug 'taohexxx/lightline-buffer'
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-speeddating'
Plug 'vim-crystal/vim-crystal'
Plug 'neoclide/coc.nvim', {'do': 'yarn install --frozen-lockfile'}
Plug 'jiangmiao/auto-pairs'

Plug 'kyazdani42/nvim-web-devicons'
Plug 'ryanoasis/vim-devicons'
call plug#end()

let g:coc_global_extensions = ['coc-tslint-plugin', 'coc-tsserver', 'coc-css', 'coc-html', 'coc-json', 'coc-prettier', 'coc-elixir']

" Files
set directory=~/.vim/swap//
set undodir=~/.vim/undo//
set undofile

" Behavior
let mapleader = ","
set bs=2
set clipboard=unnamed
set hidden
set ignorecase
set nowrap
set number
set scrolloff=5
set smartcase
set mouse=a
set updatetime=100

" Indentation defaults (does not override vim-sleuth's indenting detection)
set tabstop=4
if get(g:, '_has_set_default_indent_settings', 0) == 0
	set shiftwidth=4
	set smartindent
	set noexpandtab
	let g:_has_set_default_indent_settings = 1
endif

" Visual
set list listchars=tab:›\ ,trail:·,eol:¬
set background=dark
silent! color jellybeans
set encoding=utf-8
set fillchars=vert:\ ,fold:-,eob:~


"
" Plugins
"

" NERDTree
let NERDTreeMinimalUI=1
let g:NERDTreeDirArrowExpandable = ''
let g:NERDTreeDirArrowCollapsible = ''
let g:NERDTreeChDirMode=2
let NERDTreeShowBookmarks=1
nmap <Leader>n :NERDTreeToggle<CR>

" 

" fzf
command! -bang -nargs=? -complete=dir Files
    \ call fzf#vim#files(<q-args>, {'options': ['--info=inline', '--preview', '~/.vim/plugged/fzf.vim/bin/preview.sh {}']}, <bang>0)
nnoremap <silent> <C-p> :Files<CR>
let g:fzf_layout = { 'window': { 'width': 0.90, 'height': 0.90 } }

" ag (The Silver Searcher)
" See https://robots.thoughtbot.com/faster-grepping-in-vim
if executable('ag')
	" Use ag over grep
	set grepprg=ag\ --nogroup\ --nocolor

	" Use ag in ack.vim
	let g:ackprg = 'ag --vimgrep'
endif

" Lightline
set noshowmode
set laststatus=2

" Lightline Buffer
set showtabline=2
let g:lightline = {
	\ 'colorscheme': 'jellybeans',
	\ 'mode_map': {
	\   'n' : 'N',
	\   'i' : 'I',
	\   'R' : 'R',
	\   'v' : 'V',
	\   'V' : 'VL',
	\   "\<C-v>": 'VB',
	\   'c' : 'C',
	\   's' : 'S',
	\   'S' : 'SL',
	\   "\<C-s>": 'SB',
	\   't': 'T',
	\ },
	\ 'tabline': {
	\   'left': [ [ 'bufferinfo' ],
	\             [ 'separator' ],
	\             [ 'bufferbefore', 'buffercurrent', 'bufferafter' ], ],
	\   'right': [ [ 'close' ], ],
	\ },
	\ 'component_expand': {
	\   'buffercurrent': 'lightline#buffer#buffercurrent',
	\   'bufferbefore': 'lightline#buffer#bufferbefore',
	\   'bufferafter': 'lightline#buffer#bufferafter',
	\ },
	\ 'component_type': {
	\   'buffercurrent': 'tabsel',
	\   'bufferbefore': 'raw',
	\   'bufferafter': 'raw',
	\ },
	\ 'component_function': {
	\   'bufferinfo': 'lightline#buffer#bufferinfo',
	\ },
	\ 'component': {
	\   'separator': '',
	\ },
\ }
let g:lightline_buffer_logo = ''
let g:lightline_buffer_readonly_icon = ''
let g:lightline_buffer_modified_icon = '✭'
let g:lightline_buffer_git_icon = ' '
let g:lightline_buffer_ellipsis_icon = '..'
let g:lightline_buffer_expand_left_icon = '◀ '
let g:lightline_buffer_expand_right_icon = ' ▶'
let g:lightline_buffer_active_buffer_left_icon = ''
let g:lightline_buffer_active_buffer_right_icon = ''
let g:lightline_buffer_separator_icon = '  '
let g:lightline_buffer_show_bufnr = 1
let g:lightline_buffer_rotate = 0
let g:lightline_buffer_fname_mod = ':t'
let g:lightline_buffer_excludes = ['vimfiler']
let g:lightline_buffer_maxflen = 30
let g:lightline_buffer_maxfextlen = 3
let g:lightline_buffer_minflen = 16
let g:lightline_buffer_minfextlen = 3
let g:lightline_buffer_reservelen = 20

" vim-jsx
let g:vim_jsx_pretty_colorful_config=1

" markdown-preview
let g:mkdp_auto_close = 0
let vim_markdown_preview_github=1
let vim_markdown_preview_hotkey='<Leader>p'

" vim-devicons
let g:DevIconsEnableFoldersOpenClose = 1
